---
- name: update package cache
  apt:
    update_cache: yes
  become: yes

- name: install ansible dependencies
  apt:
    name: software-properties-common
    state: present
  become: yes

- name: set up ansible ppa
  apt_repository:
    repo: ppa:ansible/ansible
  become: yes

- name: installs ansible
  apt:
    name: ansible
    state: present
  become: yes

- name: setups default umask
  lineinfile:
    path: '{{ item }}'
    line: umask 027
  with_items:
    - /etc/profile
    - /etc/bash.bashrc
  become: yes

- name: ensures new users home dir are set with previously set umask like permissions if using adduser
  lineinfile:
    path: /etc/adduser.conf
    regexp: '^DIR_MODE'
    line: 'DIR_MODE=0750'
  become: yes

- name: ensures new users home dir are set with same default umask used by the system
  lineinfile:
    path: /etc/login.defs
    regexp: '^UMASK'
    line: 'UMASK 027'
  become: yes

- name: ensures default umask compliant home dir for users
  file:
    path: /etc/skel
    mode: g-w,o-rwx
    recurse: yes
    state: directory
  become: yes

- name: ensures fancy bash configuration for users
  copy:
    src: bashrc
    dest: /etc/skel/.bashrc
    user: root
    owner: root
    mode: u=rw,g=r
  become: yes

- name: creates client users
  user:
    name: '{{ item.name }}'
    update_password: on_create
  with_items: '{{ controller_clients }}'
  become: yes

- name: creates client users agents
  user:
    name: '{{ item.name }}-agent'
    group: '{{ item.name }}'
    system: yes
    generate_ssh_key: yes
    update_password: on_create
  with_items: '{{ controller_clients }}'
  become: yes

- name: sets umask value for each client user agent
  lineinfile:
    path: /home/{{ item.name }}-agent/.profile
    regexp: '^#umask'
    line: umask 077
  with_items: '{{ controller_clients }}'
  become: yes

- name: sets up agent permissions on home folders and files, everything should be kept exclusively for the agent user
  file:
    path: /home/{{ item.name }}-agent
    mode: g-rwx,o-rwx
    recurse: yes
    state: directory
  with_items: '{{ controller_clients }}'
  become: yes

- name: adds sudoers file
  template:
    src: sudoers.j2
    dest: /etc/sudoers
    validate: visudo -cf %s
  become: yes

- name: setup ssh config
  copy:
    src: sshd_config
    dest: /etc/ssh/sshd_config
  become: yes

- name: adds admin users with default password
  user:
    name: '{{ item.name }}'
    password: '{{ item.password }}'
    groups:
      - sudo
      - adm
      - admin
      - lxd
  with_items: '{{ admin_users }}'
  become: yes

- name: adds authorized key for each admin_user and controller_client
  authorized_key:
    user: '{{ item.name }}'
    key: "{{ lookup('file', item.pubkey_file) }}"
    state: present
  with_flattened:
    - '{{ admin_users }}'
    - '{{ controller_clients }}'
  become: yes
